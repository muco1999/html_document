export function initFormWidget({ mount, botToken, chatId }) {
  const root = typeof mount === "string" ? document.querySelector(mount) : mount;
  if (!root) throw new Error("Mount element not found");

  root.innerHTML = `
    <form id="candidate-form" novalidate>
      <div class="grid">
        <div class="field">
          <label>–ù–æ–º</label>
          <input id="firstName" name="firstName" placeholder="–ù–æ–º–∏ —Ö—É–¥—Ä–æ –Ω–∞–≤–∏—Å–µ–¥"
                 autocomplete="given-name" required pattern="^[A-Za-z–ê-–Ø–∞-—è–Å—ë\\-\\s]{2,}$" />
        </div>
        <div class="field">
          <label>–ù–∞—Å–∞–±</label>
          <input id="lastName" name="lastName" placeholder="–ù–∞—Å–∞–±–∏ —Ö—É–¥—Ä–æ –Ω–∞–≤–∏—Å–µ–¥"
                 autocomplete="family-name" required pattern="^[A-Za-z–ê-–Ø–∞-—è–Å—ë\\-\\s]{2,}$" />
        </div>
        <div class="field">
          <label>–†–∞“õ–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω</label>
          <input id="phone" name="phone" placeholder="+992 900 00 00 00"
                 inputmode="tel" autocomplete="tel" required
                 pattern="^[+0-9\\s()-]{5,}$" />
        </div>
        <div class="field">
          <label>–®—É–º–æ —á”£ “õ–∞–¥–∞—Ä –º–µ—Ö–æ“≥–µ–¥ –±–æ –º–æ “≥–∞–º–∫–æ—Ä”£ –∫—É–Ω–µ–¥?</label>
          <select id="interest" name="interest" required>
            <option value="" disabled selected>–ò–Ω—Ç–∏—Ö–æ–± –∫—É–Ω–µ–¥ (–¥–∞—Ä —Ñ–æ–∏–∑)</option>
            <option value="10%">10% ‚Äî –ö–∞–º–µ “≥–∞–≤–∞—Å–º–∞–Ω–¥ üò¥</option>
            <option value="20%">20% ‚Äî –ú–∞–Ω —Ñ–∏–∫—Ä –¥–æ—Ä–∞–º –¥–∞—Ä –±–æ—Ä–∞–∏ “≥–∞–º–∫–æ—Ä”£</option>
            <option value="30%">30% ‚Äî –ú–∞–Ω –º–∞–Ω—Ñ–∏–∞—Ç–¥–æ—Ä “≥–∞—Å—Ç–∞–º</option>
            <option value="40%">40% ‚Äî –ú–∞–Ω –º–µ—Ö–æ“≥–∞–º –∫”Ø—à–∏—à –∫—É–Ω–∞–º</option>
            <option value="50%">50% ‚Äî –î–∏–ª–≥–∞—Ä–º–∏–∏ –º–∏—ë–Ω–∞ üòå</option>
            <option value="60%">60% ‚Äî –ú–∞–Ω –º–µ—Ö–æ“≥–∞–º –±–µ—à—Ç–∞—Ä –∏—à—Ç–∏—Ä–æ–∫ –∫—É–Ω–∞–º</option>
            <option value="70%">70% ‚Äî –ú–∞–Ω —Ö–µ–ª–µ –∑–∞–≤“õ –¥–æ—Ä–∞–º üí™</option>
            <option value="80%">80% ‚Äî –ú–∞–Ω “õ–∞—Ä–∏–± –ø—É—Ä—Ä–∞ —Ç–∞–π—ë—Ä–∞–º</option>
            <option value="90%">90% ‚Äî –ú–∞–Ω –≤–æ“õ–µ–∞–Ω “≥–∞–≤–∞—Å–º–∞–Ω–¥ “≥–∞—Å—Ç–∞–º üî•</option>
            <option value="100%">100% ‚Äî –ú–∞–Ω –ø—É—Ä—Ä–∞ –æ–º–æ–¥–∞–∞–º –±–∞—Ä–æ–∏ “≥–∞–º–∫–æ—Ä”£ üöÄ</option>
          </select>
        </div>
      </div>
      <div class="actions">
        <button class="primary" type="submit">–§–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω–∏ –¥–∞—Ä—Ö–æ—Å—Ç</button>
        <span class="note">–ë–æ –ø–∞—Ö—à –∫–∞—Ä–¥–∞–Ω–∏ —Ç—É–≥–º–∞, —à—É–º–æ –±–∞ —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω–∏ –º–∞—ä–ª—É–º–æ—Ç –±–∞ Telegram —Ä–æ–∑–∏–≥”£ –º–µ–¥–∏“≥–µ–¥.</span>
      </div>
      <div class="status" id="status"></div>
    </form>
  `;

  const form = root.querySelector("#candidate-form");
  const status = root.querySelector("#status");
  const phone = root.querySelector("#phone");

  // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  phone.addEventListener("input", () => {
    let val = phone.value.replace(/[^0-9+]/g, "");
    if (!val.startsWith("+")) val = "+" + val; // –¥–æ–±–∞–≤–ª—è–µ–º +, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤—ë–ª
    // –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç: +992 900 00 00 00
    val = val
      .replace(/^\\+(\\d{3})(\\d{3})(\\d{2})(\\d{2})(\\d{0,2}).*/, "+$1 $2 $3 $4 $5")
      .trim();
    phone.value = val;
  });

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    status.textContent = "";
    status.className = "status";

    if (!botToken || !chatId) {
      status.textContent = "‚ùóÔ∏è–¢–æ–∫–µ–Ω —ë chat_id –º—É–∞–π—è–Ω –Ω–∞—à—É–¥–∞–∞—Å—Ç.";
      status.classList.add("err");
      return;
    }

    if (!form.reportValidity()) {
      status.textContent = "–õ—É—Ç—Ñ–∞–Ω —Å–∞“≥–µ“≥–∏–∏ –º–∞—ä–ª—É–º–æ—Ç—Ä–æ —Å–∞–Ω“∑–µ–¥.";
      status.classList.add("err");
      return;
    }

    const data = Object.fromEntries(new FormData(form).entries());

    const message = [
      `<b>üìù –î–∞—Ä—Ö–æ—Å—Ç–∏ –Ω–∞–≤ –≤–æ—Ä–∏–¥ —à—É–¥</b>`,
      `üë§ <b>–ù–æ–º:</b> ${escapeHtml(data.firstName)} ${escapeHtml(data.lastName)}`,
      `üìû <b>–†–∞“õ–∞–º:</b> ${escapeHtml(data.phone)}`,
      `üî• <b>–î–∞—Ä–∞“∑–∞–∏ “≥–∞–≤–∞—Å–º–∞–Ω–¥”£:</b> ${escapeHtml(data.interest)}`
    ].join("\n");

    const endpoint = `https://api.telegram.org/bot${botToken}/sendMessage`;
    const payload = {
      chat_id: chatId,
      text: message,
      parse_mode: "HTML",
      disable_web_page_preview: true
    };

    try {
      setLoading(form, true);
      const res = await fetch(endpoint, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
      });

      const json = await res.json().catch(() => ({}));
      if (!res.ok || json.ok === false) throw new Error(json.description || "–•–∞—Ç–æ–≥–∏–∏ —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω");

      status.textContent = "‚úÖ –î–∞—Ä—Ö–æ—Å—Ç —Ñ–∏—Ä–∏—Å—Ç–æ–¥–∞ —à—É–¥! –ú–æ –±–æ —à—É–º–æ –¥–∞—Ä —Ç–∞–º–æ—Å –º–µ—à–∞–≤–µ–º.";
      status.classList.add("ok");
      form.reset();
    } catch (err) {
      status.textContent = "‚ùå –§–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω –º—É–≤–∞—Ñ—Ñ–∞“õ –Ω–∞—à—É–¥. –ò–Ω—Ç–µ—Ä–Ω–µ—Ç —ë –º–∞—ä–ª—É–º–æ—Ç–∏ –±–æ—Ç—Ä–æ —Å–∞–Ω“∑–µ–¥.";
      status.classList.add("err");
      console.error(err);
    } finally {
      setLoading(form, false);
    }
  });
}

function setLoading(form, on) {
  const btn = form.querySelector('button[type="submit"]');
  if (!btn) return;
  btn.disabled = !!on;
  btn.style.filter = on ? "grayscale(30%) brightness(.9)" : "";
  btn.textContent = on ? "–§–∏—Ä–∏—Å—Ç–æ–¥–∞ –º–µ—à–∞–≤–∞–¥‚Ä¶" : "–§–∏—Ä–∏—Å—Ç–æ–¥–∞–Ω–∏ –¥–∞—Ä—Ö–æ—Å—Ç";
}

function escapeHtml(s) {
  return String(s).replace(/[&<>"]/g, (c) => ({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;" }[c]));
}
